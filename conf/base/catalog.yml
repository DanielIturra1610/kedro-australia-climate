# ─────────────────────────────────────────────
# Datos originales sin procesar
# ─────────────────────────────────────────────
weather_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/weatherAUS.csv

# ─────────────────────────────────────────────
# Datos intermedios de preprocesamiento
# ─────────────────────────────────────────────
weather_imputed_temp:
  type: MemoryDataSet # Imputación de temperatura mínima y máxima

weather_imputed_rain_today:
  type: MemoryDataSet # Imputación de variable 'RainToday'

weather_date_converted:
  type: MemoryDataSet # Conversión de fecha a tipo datetime

weather_temporal_features:
  type: MemoryDataSet # Extracción de características como año, mes, estación

weather_with_rainfall_outliers:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/weather_with_rainfall_outliers.parquet

# ─────────────────────────────────────────────
# Dataset con características finales
# ─────────────────────────────────────────────
weather_data_with_features:
  type: pandas.ParquetDataSet
  filepath: data/04_feature/weather_data_with_features.parquet

# ─────────────────────────────────────────────
# Entradas y salidas para entrenamiento del modelo
# ─────────────────────────────────────────────
dataset_entrenado:
  type: pandas.ParquetDataSet
  filepath: data/05_model_input/dataset_entrenado.parquet

modelo_clasificacion:
  type: pickle.PickleDataSet
  filepath: data/06_models/modelo_clasificacion.pkl

# ─────────────────────────────────────────────
# Inference: entrada y resultados del modelo
# ─────────────────────────────────────────────
datos_a_predecir:
  type: pandas.ParquetDataSet
  filepath: data/05_model_input/datos_a_predecir.parquet

climate_inference_input:
  type: pandas.ParquetDataSet
  filepath: data/05_model_input/climate_inference_input.parquet

climate_inference_output:
  type: pandas.ParquetDataSet
  filepath: data/08_reporting/climate_inference_output.parquet

predicciones_riesgo_climatico:
  type: pandas.ParquetDataSet
  filepath: data/08_reporting/predicciones_riesgo_climatico.parquet

predicciones_climaticas:
  type: pandas.ParquetDataSet
  filepath: data/08_reporting/predicciones_climaticas.parquet

# ─────────────────────────────────────────────
# Reporte de salida del proyecto
# ─────────────────────────────────────────────
climate_risk_predictions:
  type: pandas.CSVDataSet
  filepath: data/07_model_output/climate_risk_predictions.csv

climate_risk_scores:
  type: pandas.ParquetDataSet
  filepath: data/07_model_output/climate_risk_scores.parquet

climate_risk_summary:
  type: pandas.ExcelDataSet
  filepath: data/08_reporting/climate_risk_summary.xlsx
  save_args:
    sheet_name: RiskSummary

climate_risk_index:
  type: pandas.CSVDataSet
  filepath: data/08_reporting/climate_risk_index.csv
  save_args:
    index: False

# ─────────────────────────────────────────────
# Modelo de Regresión Lineal: Entrenamiento y Evaluación
# ─────────────────────────────────────────────
X_train:
  type: pandas.ParquetDataSet
  filepath: data/05_model_input/X_train.parquet

X_test:
  type: pandas.ParquetDataSet
  filepath: data/05_model_input/X_test.parquet

y_train:
  type: pandas.ParquetDataSet
  filepath: data/05_model_input/y_train.parquet

y_test:
  type: pandas.ParquetDataSet
  filepath: data/05_model_input/y_test.parquet

regression_model:
  type: pickle.PickleDataSet
  filepath: data/06_models/regression_model.pkl

regression_model_metrics:
  type: json.JSONDataSet
  filepath: data/08_reporting/regression_model_metrics.json

# ─────────────────────────────────────────────
# Resultados del Modelo de Regresión Lineal
# ─────────────────────────────────────────────

regression_metrics_report:
  type: pandas.ExcelDataSet
  filepath: data/08_reporting/regression_metrics_report.xlsx
  save_args:
    sheet_name: RegressionMetrics

# ─────────────────────────────────────────────
# Modelo de Regresión: Árbol de decisión
# ─────────────────────────────────────────────
tree_model:
  type: pickle.PickleDataSet
  filepath: data/06_models/tree_model.pkl
  versioned: true

tree_model_metrics:
  type: json.JSONDataSet
  filepath: data/08_reporting/tree_model_metrics.json
  versioned: true

# ─────────────────────────────────────────────
#  UTILITIES ─ identificador de ejecución
# ─────────────────────────────────────────────
metadata_runs:
  type: kedro_datasets.pandas.SQLTableDataSet
  table_name: metadata.runs
  credentials: postgres_creds
  save_args:
    if_exists: append

#  ➜   Variable en memoria que viaja entre nodos
run_id:
  type: MemoryDataSet
# ─────────────────────────────────────────────
#  MÉTRICAS DE REGRESIÓN  (formato largo)
# ─────────────────────────────────────────────
regression_metrics_pg:
  type: kedro_datasets.pandas.SQLTableDataSet
  table_name: ml_metrics.regression
  credentials: postgres_creds
  save_args:
    if_exists: append
# ─────────────────────────────────────────────
#  MÉTRICAS DE CLASIFICACIÓN  (formato largo)
# ─────────────────────────────────────────────
classification_metrics_pg:
  type: kedro_datasets.pandas.SQLTableDataSet
  table_name: ml_metrics.classification
  credentials: postgres_creds
  save_args:
    if_exists: append
# ─────────────────────────────────────────────
#  ÍNDICE DE RIESGO CLIMÁTICO POR CIUDAD
# ─────────────────────────────────────────────
risk_index_pg:
  type: kedro_datasets.pandas.SQLTableDataSet
  table_name: climate_risk # ← sin esquema
  credentials: postgres_creds
  save_args:
    if_exists: append
# ─────────────────────────────────────────────
#  MÉTRICAS DE CLASIFICACIÓN – artefacto local
# ─────────────────────────────────────────────
classification_metrics_local:
  type: json.JSONDataSet # o MemoryDataSet si no lo quieres persistir
  filepath: data/08_reporting/classification_model_metrics.json
